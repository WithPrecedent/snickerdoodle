# Automatically performs jobs upon a commit push or pull-request

# This Action builds, tests, and lints the package. Then, it builds the
# documentation and deploys it on GitHub Pages.

# If the commit message matches a semantic version (e.g. "v0.1.2"), a GitHub
# release will be created by the `create_github_release` job.

name: continuous integration

# Allows this Action to be called by a push or pull request
on: [push, pull_request]

permissions:
  contents: write
  pull-requests: write

jobs:

  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - name: get repository
      uses: actions/checkout@v4.1.1

    - name: install python
      uses: actions/setup-python@v5
      with:
        python-version: ${{"{{"}} matrix.python-version {{"}}"}}

    - name: install pdm
      uses: pdm-project/setup-pdm@v4
      id: setup-pdm
      with:
        python-version: ${{"{{"}} matrix.python-version {{"}}"}}

    - name: output status
      shell: bash
      run: |
        echo ${{"{{"}} steps.setup-pdm.outputs.pdm-bin {{"}}"}}
        echo ${{"{{"}} steps.setup-pdm.outputs.pdm-version {{"}}"}}
        echo ${{"{{"}} steps.setup-pdm.outputs.python-path {{"}}"}}
        echo ${{"{{"}} steps.setup-pdm.outputs.python-version {{"}}"}}

    - name: install dependencies
      shell: bash
      run: pdm install -v && pdm info

    - name: run tests
      run: pdm run -v pytest tests

    - name: run ruff
      run: pdm run ruff check --format=github .

  lint_and_format:
    runs-on: ubuntu-latest

    steps:
    - name: get repository
      uses: actions/checkout@v4.1.1

    - name: install python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: install pdm
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: 3.x

    - name: install dependencies
      shell: bash
      run: pdm install -v && pdm info

    - name: run ruff
      run: pdm run ruff check --format=github .

  document_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: get repository
      uses: actions/checkout@v4.1.1

    - name: install python
      uses: actions/setup-python@v5
      with:
        python-version: 3.x

    - name: install pdm
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: 3.x

    - name: install dependencies
      shell: bash
      run: pdm install -v && pdm info

    - name: build documentation with mkdocs
      run: pdm run mkdocs build

    - name: deploy documentation to github pages
      run: pdm run mkdocs gh-deploy --force --clean --verbose

  # Only triggered if the commit message matches the semantic version format
  # (e.g. "v0.1.2").
  create_github_release:
    name: create github release
    runs-on: ubuntu-latest

    steps:
    - name: initiate github release
      uses: CupOfTea696/gh-action-auto-release@v1.0.2
      with:
        title: "Release: $version"
        tag: "v$semver"
        regex: "/^v#{semver}$/i"
      env:
          GITHUB_TOKEN: ${{"{{"}} secrets.GITHUB_TOKEN {{"}}"}}
